// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: admin.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PNR           string   `protobuf:"bytes,1,opt,name=PNR,proto3" json:"PNR,omitempty"`
	SeatArray     []string `protobuf:"bytes,2,rep,name=seat_array,json=seatArray,proto3" json:"seat_array,omitempty"`
	FlightChartId int32    `protobuf:"varint,3,opt,name=flight_chart_id,json=flightChartId,proto3" json:"flight_chart_id,omitempty"`
	Email         string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Economy       bool     `protobuf:"varint,5,opt,name=economy,proto3" json:"economy,omitempty"`
}

func (x *SeatRequest) Reset() {
	*x = SeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatRequest) ProtoMessage() {}

func (x *SeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatRequest.ProtoReflect.Descriptor instead.
func (*SeatRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *SeatRequest) GetPNR() string {
	if x != nil {
		return x.PNR
	}
	return ""
}

func (x *SeatRequest) GetSeatArray() []string {
	if x != nil {
		return x.SeatArray
	}
	return nil
}

func (x *SeatRequest) GetFlightChartId() int32 {
	if x != nil {
		return x.FlightChartId
	}
	return 0
}

func (x *SeatRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SeatRequest) GetEconomy() bool {
	if x != nil {
		return x.Economy
	}
	return false
}

type SeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PNR     string   `protobuf:"bytes,1,opt,name=PNR,proto3" json:"PNR,omitempty"`
	SeatNos []string `protobuf:"bytes,2,rep,name=seat_nos,json=seatNos,proto3" json:"seat_nos,omitempty"`
}

func (x *SeatResponse) Reset() {
	*x = SeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatResponse) ProtoMessage() {}

func (x *SeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatResponse.ProtoReflect.Descriptor instead.
func (*SeatResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *SeatResponse) GetPNR() string {
	if x != nil {
		return x.PNR
	}
	return ""
}

func (x *SeatResponse) GetSeatNos() []string {
	if x != nil {
		return x.SeatNos
	}
	return nil
}

type ConfirmedSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Economy               bool    `protobuf:"varint,1,opt,name=economy,proto3" json:"economy,omitempty"`
	Travellers            int32   `protobuf:"varint,2,opt,name=travellers,proto3" json:"travellers,omitempty"`
	FlightChartIdDirect   []int32 `protobuf:"varint,3,rep,packed,name=flight_chart_id_direct,json=flightChartIdDirect,proto3" json:"flight_chart_id_direct,omitempty"`
	FlightChartIdIndirect []int32 `protobuf:"varint,4,rep,packed,name=flight_chart_id_indirect,json=flightChartIdIndirect,proto3" json:"flight_chart_id_indirect,omitempty"`
}

func (x *ConfirmedSeatRequest) Reset() {
	*x = ConfirmedSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmedSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmedSeatRequest) ProtoMessage() {}

func (x *ConfirmedSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmedSeatRequest.ProtoReflect.Descriptor instead.
func (*ConfirmedSeatRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *ConfirmedSeatRequest) GetEconomy() bool {
	if x != nil {
		return x.Economy
	}
	return false
}

func (x *ConfirmedSeatRequest) GetTravellers() int32 {
	if x != nil {
		return x.Travellers
	}
	return 0
}

func (x *ConfirmedSeatRequest) GetFlightChartIdDirect() []int32 {
	if x != nil {
		return x.FlightChartIdDirect
	}
	return nil
}

func (x *ConfirmedSeatRequest) GetFlightChartIdIndirect() []int32 {
	if x != nil {
		return x.FlightChartIdIndirect
	}
	return nil
}

type ConfirmedSeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfirmedSeatResponse) Reset() {
	*x = ConfirmedSeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmedSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmedSeatResponse) ProtoMessage() {}

func (x *ConfirmedSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmedSeatResponse.ProtoReflect.Descriptor instead.
func (*ConfirmedSeatResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

type SearchFlightRequestAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartureAirport    string `protobuf:"bytes,1,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	ArrivalAirport      string `protobuf:"bytes,2,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
	DepartureDate       string `protobuf:"bytes,3,opt,name=departure_date,json=departureDate,proto3" json:"departure_date,omitempty"`
	ReturnDepartureDate string `protobuf:"bytes,4,opt,name=return_departure_date,json=returnDepartureDate,proto3" json:"return_departure_date,omitempty"`
	ReturnFlight        bool   `protobuf:"varint,5,opt,name=return_flight,json=returnFlight,proto3" json:"return_flight,omitempty"`
	MaxStops            string `protobuf:"bytes,6,opt,name=max_stops,json=maxStops,proto3" json:"max_stops,omitempty"`
	Economy             bool   `protobuf:"varint,7,opt,name=economy,proto3" json:"economy,omitempty"`
}

func (x *SearchFlightRequestAdmin) Reset() {
	*x = SearchFlightRequestAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFlightRequestAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFlightRequestAdmin) ProtoMessage() {}

func (x *SearchFlightRequestAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFlightRequestAdmin.ProtoReflect.Descriptor instead.
func (*SearchFlightRequestAdmin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *SearchFlightRequestAdmin) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *SearchFlightRequestAdmin) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

func (x *SearchFlightRequestAdmin) GetDepartureDate() string {
	if x != nil {
		return x.DepartureDate
	}
	return ""
}

func (x *SearchFlightRequestAdmin) GetReturnDepartureDate() string {
	if x != nil {
		return x.ReturnDepartureDate
	}
	return ""
}

func (x *SearchFlightRequestAdmin) GetReturnFlight() bool {
	if x != nil {
		return x.ReturnFlight
	}
	return false
}

func (x *SearchFlightRequestAdmin) GetMaxStops() string {
	if x != nil {
		return x.MaxStops
	}
	return ""
}

func (x *SearchFlightRequestAdmin) GetEconomy() bool {
	if x != nil {
		return x.Economy
	}
	return false
}

type FlightDetailsAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightChartId     uint32                 `protobuf:"varint,1,opt,name=flight_chart_id,json=flightChartId,proto3" json:"flight_chart_id,omitempty"`
	FlightNumber      string                 `protobuf:"bytes,2,opt,name=flight_number,json=flightNumber,proto3" json:"flight_number,omitempty"`
	Airline           string                 `protobuf:"bytes,3,opt,name=airline,proto3" json:"airline,omitempty"`
	DepartureAirport  string                 `protobuf:"bytes,4,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`       // Renamed from dep_airport
	ArrivalAirport    string                 `protobuf:"bytes,5,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`             // Renamed from arr_airport
	DepartureDate     string                 `protobuf:"bytes,6,opt,name=departure_date,json=departureDate,proto3" json:"departure_date,omitempty"`                // Renamed from dep_date
	ArrivalDate       string                 `protobuf:"bytes,7,opt,name=arrival_date,json=arrivalDate,proto3" json:"arrival_date,omitempty"`                      // Renamed from arr_date
	DepartureTime     string                 `protobuf:"bytes,8,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`                // Renamed from dep_time
	ArrivalTime       string                 `protobuf:"bytes,9,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`                      // Renamed from arr_time
	DepartureDateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=departure_date_time,json=departureDateTime,proto3" json:"departure_date_time,omitempty"` // Renamed from dep_datetime
	ArrivalDateTime   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=arrival_date_time,json=arrivalDateTime,proto3" json:"arrival_date_time,omitempty"`       // Renamed from arr_datetime
	EconomyFare       float64                `protobuf:"fixed64,12,opt,name=economy_fare,json=economyFare,proto3" json:"economy_fare,omitempty"`
	BusinessFare      float64                `protobuf:"fixed64,13,opt,name=business_fare,json=businessFare,proto3" json:"business_fare,omitempty"`
}

func (x *FlightDetailsAdmin) Reset() {
	*x = FlightDetailsAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightDetailsAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightDetailsAdmin) ProtoMessage() {}

func (x *FlightDetailsAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightDetailsAdmin.ProtoReflect.Descriptor instead.
func (*FlightDetailsAdmin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *FlightDetailsAdmin) GetFlightChartId() uint32 {
	if x != nil {
		return x.FlightChartId
	}
	return 0
}

func (x *FlightDetailsAdmin) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *FlightDetailsAdmin) GetAirline() string {
	if x != nil {
		return x.Airline
	}
	return ""
}

func (x *FlightDetailsAdmin) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *FlightDetailsAdmin) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

func (x *FlightDetailsAdmin) GetDepartureDate() string {
	if x != nil {
		return x.DepartureDate
	}
	return ""
}

func (x *FlightDetailsAdmin) GetArrivalDate() string {
	if x != nil {
		return x.ArrivalDate
	}
	return ""
}

func (x *FlightDetailsAdmin) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

func (x *FlightDetailsAdmin) GetArrivalTime() string {
	if x != nil {
		return x.ArrivalTime
	}
	return ""
}

func (x *FlightDetailsAdmin) GetDepartureDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureDateTime
	}
	return nil
}

func (x *FlightDetailsAdmin) GetArrivalDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalDateTime
	}
	return nil
}

func (x *FlightDetailsAdmin) GetEconomyFare() float64 {
	if x != nil {
		return x.EconomyFare
	}
	return 0
}

func (x *FlightDetailsAdmin) GetBusinessFare() float64 {
	if x != nil {
		return x.BusinessFare
	}
	return 0
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathId           int32                 `protobuf:"varint,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	Flights          []*FlightDetailsAdmin `protobuf:"bytes,2,rep,name=flights,proto3" json:"flights,omitempty"`
	NumberOfStops    int32                 `protobuf:"varint,3,opt,name=number_of_stops,json=numberOfStops,proto3" json:"number_of_stops,omitempty"`
	TotalTravelTime  float64               `protobuf:"fixed64,4,opt,name=total_travel_time,json=totalTravelTime,proto3" json:"total_travel_time,omitempty"`
	DepartureAirport string                `protobuf:"bytes,5,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	ArrivalAirport   string                `protobuf:"bytes,6,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *Path) GetPathId() int32 {
	if x != nil {
		return x.PathId
	}
	return 0
}

func (x *Path) GetFlights() []*FlightDetailsAdmin {
	if x != nil {
		return x.Flights
	}
	return nil
}

func (x *Path) GetNumberOfStops() int32 {
	if x != nil {
		return x.NumberOfStops
	}
	return 0
}

func (x *Path) GetTotalTravelTime() float64 {
	if x != nil {
		return x.TotalTravelTime
	}
	return 0
}

func (x *Path) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *Path) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

type SearchFlightResponseAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectPath       []*Path `protobuf:"bytes,1,rep,name=direct_path,json=directPath,proto3" json:"direct_path,omitempty"`
	ReturnPath       []*Path `protobuf:"bytes,2,rep,name=return_path,json=returnPath,proto3" json:"return_path,omitempty"`
	DepartureAirport string  `protobuf:"bytes,3,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	ArrivalAirport   string  `protobuf:"bytes,4,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
}

func (x *SearchFlightResponseAdmin) Reset() {
	*x = SearchFlightResponseAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFlightResponseAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFlightResponseAdmin) ProtoMessage() {}

func (x *SearchFlightResponseAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFlightResponseAdmin.ProtoReflect.Descriptor instead.
func (*SearchFlightResponseAdmin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *SearchFlightResponseAdmin) GetDirectPath() []*Path {
	if x != nil {
		return x.DirectPath
	}
	return nil
}

func (x *SearchFlightResponseAdmin) GetReturnPath() []*Path {
	if x != nil {
		return x.ReturnPath
	}
	return nil
}

func (x *SearchFlightResponseAdmin) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *SearchFlightResponseAdmin) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

type SelectFlightAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	DirectPathId string `protobuf:"bytes,2,opt,name=direct_path_id,json=directPathId,proto3" json:"direct_path_id,omitempty"`
	ReturnPathId string `protobuf:"bytes,3,opt,name=return_path_id,json=returnPathId,proto3" json:"return_path_id,omitempty"`
	Adults       int32  `protobuf:"varint,4,opt,name=adults,proto3" json:"adults,omitempty"`
	Children     int32  `protobuf:"varint,5,opt,name=children,proto3" json:"children,omitempty"`
	Economy      bool   `protobuf:"varint,6,opt,name=economy,proto3" json:"economy,omitempty"`
}

func (x *SelectFlightAdmin) Reset() {
	*x = SelectFlightAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectFlightAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectFlightAdmin) ProtoMessage() {}

func (x *SelectFlightAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectFlightAdmin.ProtoReflect.Descriptor instead.
func (*SelectFlightAdmin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *SelectFlightAdmin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SelectFlightAdmin) GetDirectPathId() string {
	if x != nil {
		return x.DirectPathId
	}
	return ""
}

func (x *SelectFlightAdmin) GetReturnPathId() string {
	if x != nil {
		return x.ReturnPathId
	}
	return ""
}

func (x *SelectFlightAdmin) GetAdults() int32 {
	if x != nil {
		return x.Adults
	}
	return 0
}

func (x *SelectFlightAdmin) GetChildren() int32 {
	if x != nil {
		return x.Children
	}
	return 0
}

func (x *SelectFlightAdmin) GetEconomy() bool {
	if x != nil {
		return x.Economy
	}
	return false
}

type SelectFlightAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelectFlightAdminResponse) Reset() {
	*x = SelectFlightAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectFlightAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectFlightAdminResponse) ProtoMessage() {}

func (x *SelectFlightAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectFlightAdminResponse.ProtoReflect.Descriptor instead.
func (*SelectFlightAdminResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

type FlightDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightNumber     string  `protobuf:"bytes,1,opt,name=flight_number,json=flightNumber,proto3" json:"flight_number,omitempty"`
	Airline          string  `protobuf:"bytes,2,opt,name=airline,proto3" json:"airline,omitempty"`
	DepartureAirport string  `protobuf:"bytes,3,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	DepartureDate    string  `protobuf:"bytes,4,opt,name=departure_date,json=departureDate,proto3" json:"departure_date,omitempty"`
	DepartureTime    string  `protobuf:"bytes,5,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalAirport   string  `protobuf:"bytes,6,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
	ArrivalDate      string  `protobuf:"bytes,7,opt,name=arrival_date,json=arrivalDate,proto3" json:"arrival_date,omitempty"`
	ArrivalTime      string  `protobuf:"bytes,8,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	FlightFare       float32 `protobuf:"fixed32,9,opt,name=flight_fare,json=flightFare,proto3" json:"flight_fare,omitempty"`
	FlightChartId    uint32  `protobuf:"varint,10,opt,name=flight_chart_id,json=flightChartId,proto3" json:"flight_chart_id,omitempty"`
}

func (x *FlightDetails) Reset() {
	*x = FlightDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightDetails) ProtoMessage() {}

func (x *FlightDetails) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightDetails.ProtoReflect.Descriptor instead.
func (*FlightDetails) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *FlightDetails) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *FlightDetails) GetAirline() string {
	if x != nil {
		return x.Airline
	}
	return ""
}

func (x *FlightDetails) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *FlightDetails) GetDepartureDate() string {
	if x != nil {
		return x.DepartureDate
	}
	return ""
}

func (x *FlightDetails) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

func (x *FlightDetails) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

func (x *FlightDetails) GetArrivalDate() string {
	if x != nil {
		return x.ArrivalDate
	}
	return ""
}

func (x *FlightDetails) GetArrivalTime() string {
	if x != nil {
		return x.ArrivalTime
	}
	return ""
}

func (x *FlightDetails) GetFlightFare() float32 {
	if x != nil {
		return x.FlightFare
	}
	return 0
}

func (x *FlightDetails) GetFlightChartId() uint32 {
	if x != nil {
		return x.FlightChartId
	}
	return 0
}

type SearchFlightDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathId        int32            `protobuf:"varint,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	NumberOfStops int32            `protobuf:"varint,2,opt,name=number_of_stops,json=numberOfStops,proto3" json:"number_of_stops,omitempty"`
	FlightSegment []*FlightDetails `protobuf:"bytes,3,rep,name=flight_segment,json=flightSegment,proto3" json:"flight_segment,omitempty"`
}

func (x *SearchFlightDetails) Reset() {
	*x = SearchFlightDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFlightDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFlightDetails) ProtoMessage() {}

func (x *SearchFlightDetails) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFlightDetails.ProtoReflect.Descriptor instead.
func (*SearchFlightDetails) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *SearchFlightDetails) GetPathId() int32 {
	if x != nil {
		return x.PathId
	}
	return 0
}

func (x *SearchFlightDetails) GetNumberOfStops() int32 {
	if x != nil {
		return x.NumberOfStops
	}
	return 0
}

func (x *SearchFlightDetails) GetFlightSegment() []*FlightDetails {
	if x != nil {
		return x.FlightSegment
	}
	return nil
}

type SearchFlightResponse1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalDirectFlights int32                  `protobuf:"varint,1,opt,name=total_direct_flights,json=totalDirectFlights,proto3" json:"total_direct_flights,omitempty"`
	TotalReturnFlights int32                  `protobuf:"varint,2,opt,name=total_return_flights,json=totalReturnFlights,proto3" json:"total_return_flights,omitempty"`
	ToFlights          []*SearchFlightDetails `protobuf:"bytes,3,rep,name=to_flights,json=toFlights,proto3" json:"to_flights,omitempty"`
	ReturnFlights      []*SearchFlightDetails `protobuf:"bytes,4,rep,name=return_flights,json=returnFlights,proto3" json:"return_flights,omitempty"`
	SearchToken        string                 `protobuf:"bytes,5,opt,name=search_token,json=searchToken,proto3" json:"search_token,omitempty"`
	DepartureAirport   string                 `protobuf:"bytes,6,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	ArrivalAirport     string                 `protobuf:"bytes,7,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
}

func (x *SearchFlightResponse1) Reset() {
	*x = SearchFlightResponse1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFlightResponse1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFlightResponse1) ProtoMessage() {}

func (x *SearchFlightResponse1) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFlightResponse1.ProtoReflect.Descriptor instead.
func (*SearchFlightResponse1) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *SearchFlightResponse1) GetTotalDirectFlights() int32 {
	if x != nil {
		return x.TotalDirectFlights
	}
	return 0
}

func (x *SearchFlightResponse1) GetTotalReturnFlights() int32 {
	if x != nil {
		return x.TotalReturnFlights
	}
	return 0
}

func (x *SearchFlightResponse1) GetToFlights() []*SearchFlightDetails {
	if x != nil {
		return x.ToFlights
	}
	return nil
}

func (x *SearchFlightResponse1) GetReturnFlights() []*SearchFlightDetails {
	if x != nil {
		return x.ReturnFlights
	}
	return nil
}

func (x *SearchFlightResponse1) GetSearchToken() string {
	if x != nil {
		return x.SearchToken
	}
	return ""
}

func (x *SearchFlightResponse1) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *SearchFlightResponse1) GetArrivalAirport() string {
	if x != nil {
		return x.ArrivalAirport
	}
	return ""
}

type Cancellation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CancellationPercentage     float32 `protobuf:"fixed32,1,opt,name=cancellation_percentage,json=cancellationPercentage,proto3" json:"cancellation_percentage,omitempty"`
	CancellationDeadlineBefore int32   `protobuf:"varint,2,opt,name=cancellation_deadline_before,json=cancellationDeadlineBefore,proto3" json:"cancellation_deadline_before,omitempty"`
	Refundable                 bool    `protobuf:"varint,3,opt,name=refundable,proto3" json:"refundable,omitempty"`
}

func (x *Cancellation) Reset() {
	*x = Cancellation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cancellation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancellation) ProtoMessage() {}

func (x *Cancellation) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancellation.ProtoReflect.Descriptor instead.
func (*Cancellation) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{13}
}

func (x *Cancellation) GetCancellationPercentage() float32 {
	if x != nil {
		return x.CancellationPercentage
	}
	return 0
}

func (x *Cancellation) GetCancellationDeadlineBefore() int32 {
	if x != nil {
		return x.CancellationDeadlineBefore
	}
	return 0
}

func (x *Cancellation) GetRefundable() bool {
	if x != nil {
		return x.Refundable
	}
	return false
}

type Baggage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CabinAllowedHeight  float32 `protobuf:"fixed32,1,opt,name=cabin_allowed_height,json=cabinAllowedHeight,proto3" json:"cabin_allowed_height,omitempty"`
	CabinAllowedWeight  float32 `protobuf:"fixed32,2,opt,name=cabin_allowed_weight,json=cabinAllowedWeight,proto3" json:"cabin_allowed_weight,omitempty"`
	CabinAllowedBreadth float32 `protobuf:"fixed32,3,opt,name=cabin_allowed_breadth,json=cabinAllowedBreadth,proto3" json:"cabin_allowed_breadth,omitempty"`
	CabinAllowedLength  float32 `protobuf:"fixed32,4,opt,name=cabin_allowed_length,json=cabinAllowedLength,proto3" json:"cabin_allowed_length,omitempty"`
	HandAllowedHeight   float32 `protobuf:"fixed32,5,opt,name=hand_allowed_height,json=handAllowedHeight,proto3" json:"hand_allowed_height,omitempty"`
	HandAllowedWeight   float32 `protobuf:"fixed32,6,opt,name=hand_allowed_weight,json=handAllowedWeight,proto3" json:"hand_allowed_weight,omitempty"`
	HandAllowedBreadth  float32 `protobuf:"fixed32,7,opt,name=hand_allowed_breadth,json=handAllowedBreadth,proto3" json:"hand_allowed_breadth,omitempty"`
	HandAllowedLength   float32 `protobuf:"fixed32,8,opt,name=hand_allowed_length,json=handAllowedLength,proto3" json:"hand_allowed_length,omitempty"`
	FeeExtraPerKgHand   float32 `protobuf:"fixed32,9,opt,name=fee_extra_per_kg_hand,json=feeExtraPerKgHand,proto3" json:"fee_extra_per_kg_hand,omitempty"`
	FeeExtraPerKgCabin  float32 `protobuf:"fixed32,10,opt,name=fee_extra_per_kg_cabin,json=feeExtraPerKgCabin,proto3" json:"fee_extra_per_kg_cabin,omitempty"`
	Restrictions        string  `protobuf:"bytes,11,opt,name=restrictions,proto3" json:"restrictions,omitempty"`
}

func (x *Baggage) Reset() {
	*x = Baggage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Baggage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Baggage) ProtoMessage() {}

func (x *Baggage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Baggage.ProtoReflect.Descriptor instead.
func (*Baggage) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{14}
}

func (x *Baggage) GetCabinAllowedHeight() float32 {
	if x != nil {
		return x.CabinAllowedHeight
	}
	return 0
}

func (x *Baggage) GetCabinAllowedWeight() float32 {
	if x != nil {
		return x.CabinAllowedWeight
	}
	return 0
}

func (x *Baggage) GetCabinAllowedBreadth() float32 {
	if x != nil {
		return x.CabinAllowedBreadth
	}
	return 0
}

func (x *Baggage) GetCabinAllowedLength() float32 {
	if x != nil {
		return x.CabinAllowedLength
	}
	return 0
}

func (x *Baggage) GetHandAllowedHeight() float32 {
	if x != nil {
		return x.HandAllowedHeight
	}
	return 0
}

func (x *Baggage) GetHandAllowedWeight() float32 {
	if x != nil {
		return x.HandAllowedWeight
	}
	return 0
}

func (x *Baggage) GetHandAllowedBreadth() float32 {
	if x != nil {
		return x.HandAllowedBreadth
	}
	return 0
}

func (x *Baggage) GetHandAllowedLength() float32 {
	if x != nil {
		return x.HandAllowedLength
	}
	return 0
}

func (x *Baggage) GetFeeExtraPerKgHand() float32 {
	if x != nil {
		return x.FeeExtraPerKgHand
	}
	return 0
}

func (x *Baggage) GetFeeExtraPerKgCabin() float32 {
	if x != nil {
		return x.FeeExtraPerKgCabin
	}
	return 0
}

func (x *Baggage) GetRestrictions() string {
	if x != nil {
		return x.Restrictions
	}
	return ""
}

type FlightFacilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cancellation *Cancellation        `protobuf:"bytes,1,opt,name=cancellation,proto3" json:"cancellation,omitempty"`
	Baggage      *Baggage             `protobuf:"bytes,2,opt,name=baggage,proto3" json:"baggage,omitempty"`
	FlightPath   *SearchFlightDetails `protobuf:"bytes,3,opt,name=flight_path,json=flightPath,proto3" json:"flight_path,omitempty"`
	Fare         float32              `protobuf:"fixed32,4,opt,name=fare,proto3" json:"fare,omitempty"`
}

func (x *FlightFacilities) Reset() {
	*x = FlightFacilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightFacilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightFacilities) ProtoMessage() {}

func (x *FlightFacilities) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightFacilities.ProtoReflect.Descriptor instead.
func (*FlightFacilities) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{15}
}

func (x *FlightFacilities) GetCancellation() *Cancellation {
	if x != nil {
		return x.Cancellation
	}
	return nil
}

func (x *FlightFacilities) GetBaggage() *Baggage {
	if x != nil {
		return x.Baggage
	}
	return nil
}

func (x *FlightFacilities) GetFlightPath() *SearchFlightDetails {
	if x != nil {
		return x.FlightPath
	}
	return nil
}

func (x *FlightFacilities) GetFare() float32 {
	if x != nil {
		return x.Fare
	}
	return 0
}

type CompleteFlightDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectFlight     *FlightFacilities `protobuf:"bytes,1,opt,name=direct_flight,json=directFlight,proto3" json:"direct_flight,omitempty"`
	ReturnFlight     *FlightFacilities `protobuf:"bytes,2,opt,name=return_flight,json=returnFlight,proto3" json:"return_flight,omitempty"`
	NumberOfAdults   int32             `protobuf:"varint,3,opt,name=number_of_adults,json=numberOfAdults,proto3" json:"number_of_adults,omitempty"`
	NumberOfChildren int32             `protobuf:"varint,4,opt,name=number_of_children,json=numberOfChildren,proto3" json:"number_of_children,omitempty"`
	CabinClass       string            `protobuf:"bytes,5,opt,name=cabin_class,json=cabinClass,proto3" json:"cabin_class,omitempty"`
	DepartureAirport string            `protobuf:"bytes,6,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	Arrival_Airport  string            `protobuf:"bytes,7,opt,name=arrival_Airport,json=arrivalAirport,proto3" json:"arrival_Airport,omitempty"`
}

func (x *CompleteFlightDetails) Reset() {
	*x = CompleteFlightDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteFlightDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteFlightDetails) ProtoMessage() {}

func (x *CompleteFlightDetails) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteFlightDetails.ProtoReflect.Descriptor instead.
func (*CompleteFlightDetails) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{16}
}

func (x *CompleteFlightDetails) GetDirectFlight() *FlightFacilities {
	if x != nil {
		return x.DirectFlight
	}
	return nil
}

func (x *CompleteFlightDetails) GetReturnFlight() *FlightFacilities {
	if x != nil {
		return x.ReturnFlight
	}
	return nil
}

func (x *CompleteFlightDetails) GetNumberOfAdults() int32 {
	if x != nil {
		return x.NumberOfAdults
	}
	return 0
}

func (x *CompleteFlightDetails) GetNumberOfChildren() int32 {
	if x != nil {
		return x.NumberOfChildren
	}
	return 0
}

func (x *CompleteFlightDetails) GetCabinClass() string {
	if x != nil {
		return x.CabinClass
	}
	return ""
}

func (x *CompleteFlightDetails) GetDepartureAirport() string {
	if x != nil {
		return x.DepartureAirport
	}
	return ""
}

func (x *CompleteFlightDetails) GetArrival_Airport() string {
	if x != nil {
		return x.Arrival_Airport
	}
	return ""
}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x4e, 0x52, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x50, 0x4e, 0x52, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x22, 0x3b,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x50, 0x4e, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x4e, 0x52,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x33,
	0x0a, 0x16, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x13,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x22,
	0xc1, 0x04, 0x0a, 0x12, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x66, 0x61, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x46, 0x61, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x61, 0x72, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46,
	0x61, 0x72, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x07, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x74, 0x6f,
	0x70, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x2c, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x64, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x64,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x03, 0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x61, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x46,
	0x61, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53,
	0x74, 0x6f, 0x70, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0xf2, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x31, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x09, 0x74, 0x6f, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x40, 0x0a, 0x1c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x9f, 0x04, 0x0a, 0x07, 0x42, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x63, 0x61,
	0x62, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x63, 0x61, 0x62, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42,
	0x72, 0x65, 0x61, 0x64, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x5f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x6e, 0x64,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x6e, 0x64,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x6e, 0x64,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x68, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x42, 0x72, 0x65, 0x61, 0x64, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61,
	0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x15, 0x66, 0x65,
	0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x67, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x65, 0x65, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x50, 0x65, 0x72, 0x4b, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x16,
	0x66, 0x65, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x67,
	0x5f, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x66, 0x65,
	0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x65, 0x72, 0x4b, 0x67, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x67, 0x67,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66, 0x61, 0x72, 0x65, 0x22, 0xe2, 0x02,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x62, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x5f, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x32, 0xc8, 0x02, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x20, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x4e, 0x0a,
	0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a,
	0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x03, 0x5a,
	0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_admin_proto_goTypes = []interface{}{
	(*SeatRequest)(nil),               // 0: admin.SeatRequest
	(*SeatResponse)(nil),              // 1: admin.SeatResponse
	(*ConfirmedSeatRequest)(nil),      // 2: admin.ConfirmedSeatRequest
	(*ConfirmedSeatResponse)(nil),     // 3: admin.ConfirmedSeatResponse
	(*SearchFlightRequestAdmin)(nil),  // 4: admin.SearchFlightRequestAdmin
	(*FlightDetailsAdmin)(nil),        // 5: admin.FlightDetailsAdmin
	(*Path)(nil),                      // 6: admin.Path
	(*SearchFlightResponseAdmin)(nil), // 7: admin.SearchFlightResponseAdmin
	(*SelectFlightAdmin)(nil),         // 8: admin.SelectFlightAdmin
	(*SelectFlightAdminResponse)(nil), // 9: admin.SelectFlightAdminResponse
	(*FlightDetails)(nil),             // 10: admin.FlightDetails
	(*SearchFlightDetails)(nil),       // 11: admin.SearchFlightDetails
	(*SearchFlightResponse1)(nil),     // 12: admin.SearchFlightResponse1
	(*Cancellation)(nil),              // 13: admin.Cancellation
	(*Baggage)(nil),                   // 14: admin.Baggage
	(*FlightFacilities)(nil),          // 15: admin.FlightFacilities
	(*CompleteFlightDetails)(nil),     // 16: admin.CompleteFlightDetails
	(*timestamppb.Timestamp)(nil),     // 17: google.protobuf.Timestamp
}
var file_admin_proto_depIdxs = []int32{
	17, // 0: admin.FlightDetailsAdmin.departure_date_time:type_name -> google.protobuf.Timestamp
	17, // 1: admin.FlightDetailsAdmin.arrival_date_time:type_name -> google.protobuf.Timestamp
	5,  // 2: admin.Path.flights:type_name -> admin.FlightDetailsAdmin
	6,  // 3: admin.SearchFlightResponseAdmin.direct_path:type_name -> admin.Path
	6,  // 4: admin.SearchFlightResponseAdmin.return_path:type_name -> admin.Path
	10, // 5: admin.SearchFlightDetails.flight_segment:type_name -> admin.FlightDetails
	11, // 6: admin.SearchFlightResponse1.to_flights:type_name -> admin.SearchFlightDetails
	11, // 7: admin.SearchFlightResponse1.return_flights:type_name -> admin.SearchFlightDetails
	13, // 8: admin.FlightFacilities.cancellation:type_name -> admin.Cancellation
	14, // 9: admin.FlightFacilities.baggage:type_name -> admin.Baggage
	11, // 10: admin.FlightFacilities.flight_path:type_name -> admin.SearchFlightDetails
	15, // 11: admin.CompleteFlightDetails.direct_flight:type_name -> admin.FlightFacilities
	15, // 12: admin.CompleteFlightDetails.return_flight:type_name -> admin.FlightFacilities
	0,  // 13: admin.AdminService.RegisterSelectSeat:input_type -> admin.SeatRequest
	2,  // 14: admin.AdminService.AddConfirmedSeats:input_type -> admin.ConfirmedSeatRequest
	4,  // 15: admin.AdminService.RegisterSearchFlight:input_type -> admin.SearchFlightRequestAdmin
	8,  // 16: admin.AdminService.RegisterSelectFlight:input_type -> admin.SelectFlightAdmin
	1,  // 17: admin.AdminService.RegisterSelectSeat:output_type -> admin.SeatResponse
	3,  // 18: admin.AdminService.AddConfirmedSeats:output_type -> admin.ConfirmedSeatResponse
	7,  // 19: admin.AdminService.RegisterSearchFlight:output_type -> admin.SearchFlightResponseAdmin
	16, // 20: admin.AdminService.RegisterSelectFlight:output_type -> admin.CompleteFlightDetails
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmedSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmedSeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFlightRequestAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightDetailsAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFlightResponseAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectFlightAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectFlightAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFlightDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFlightResponse1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cancellation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Baggage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightFacilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteFlightDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
